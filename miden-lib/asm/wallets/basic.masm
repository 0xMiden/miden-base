use.miden::sat::account
use.miden::sat::tx

#! This procedure adds the given asset to the undelying account.
#! 
#! Inputs: [ASSET]
#! Outputs: [0, 0, 0, 0, ...]
#!
#! - ASSET is the asset to be received, can be fungible or non-fungible
export.receive_asset
    exec.account::add_asset
    padw swapw dropw
end

#! Creates a note which sends a single asset to the specified recipient.
#!
#! Inputs: [ASSET, tag, RECIPIENT, ...]
#! Outputs: [note_ptr, 0, 0, 0, 0, 0, 0, 0, 0, ...]
#!
#! - ASSET is the non-fungible asset of interest.
#! - tag is the tag to be included in the note.
#! - RECIPIENT is the recipient of the note.
#! - note_ptr is the pointer to the memory address in the kernel.
#!   This cannot directly be accessed from another context. 
export.send_asset.1
    exec.account::remove_asset
    # => [ASSET, tag, RECIPIENT, ...]

    # insert 8 ZEROs into the stack right after recipient; we temporarily store one of the
    # elements of ASSET in memory to make stack manipulation easier
    push.0 swap loc_store.0 padw push.0.0.0 swapdw loc_load.0
    # => [ASSET, tag, RECIPIENT, ZERO, ZERO, ...]

    
    exec.tx::create_note
    # => [note_ptr, ZERO, ZERO, ...]
end
