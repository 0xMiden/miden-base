use.utils::account_utils

# CONSTANTS
# =================================================================================================

const.FUNGIBLE_ASSET_MAX_AMOUNT=9223372036854775807

# PROCEDURES
# =================================================================================================

#! Returns the maximum amount of a fungible asset.
#!
#! Inputs:  []
#! Outputs: [fungible_asset_max_amount]
#!
#! Where:
#! - fungible_asset_max_amount is the maximum amount of a fungible asset.
export.get_fungible_asset_max_amount
    push.FUNGIBLE_ASSET_MAX_AMOUNT
    # => [fungible_asset_max_amount]
end

#! Returns a boolean indicating whether the asset is fungible.
#!
#! Inputs:  [ASSET]
#! Outputs: [is_fungible_asset, ASSET]
#!
#! Where:
#! - ASSET is the asset to check.
#! - is_fungible_asset is a boolean indicating whether the asset is fungible.
export.is_fungible_asset
    # check the first element, it will be:
    # - zero for a fungible asset
    # - non zero for a non-fungible asset
    dup.2 eq.0
    # => [is_fungible_asset, ASSET]
end

#! Returns a boolean indicating whether the asset is non-fungible.
#!
#! Inputs:  [ASSET]
#! Outputs: [is_non_fungible_asset, ASSET]
#!
#! Where:
#! - ASSET is the asset to check.
#! - is_non_fungible_asset is a boolean indicating whether the asset is non-fungible.
export.is_non_fungible_asset
    # check the first element, it will be:
    # - zero for a fungible asset
    # - non zero for a non-fungible asset
    exec.is_fungible_asset not
    # => [is_non_fungible_asset, ASSET]
end

