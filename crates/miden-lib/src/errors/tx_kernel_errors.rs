use miden_objects::Felt;

// This file is generated by build.rs, do not modify manually.
// It is generated by extracting errors from the masm files in the `miden-lib/asm` directory.
//
// To add a new error, define a constant in masm of the pattern `const.ERR_<CATEGORY>_...`.
// Try to fit the error into a pre-existing category if possible (e.g. Account, Prologue,
// Non-Fungible-Asset, ...).

// TX KERNEL ERRORS
// ================================================================================================

/// Error Message: "anchor block commitment must not be empty"
pub const ERR_ACCOUNT_ANCHOR_BLOCK_COMMITMENT_MUST_NOT_BE_EMPTY: Felt = Felt::new(1731800865284021169);
/// Error Message: "computed account code commitment does not match recorded account code commitment"
pub const ERR_ACCOUNT_CODE_COMMITMENT_MISMATCH: Felt = Felt::new(15010000354262625819);
/// Error Message: "account code must be updatable for it to be possible to set new code"
pub const ERR_ACCOUNT_CODE_IS_NOT_UPDATABLE: Felt = Felt::new(8475723293800134429);
/// Error Message: "epoch must be less than u16::MAX (0xffff)"
pub const ERR_ACCOUNT_ID_EPOCH_MUST_BE_LESS_THAN_U16_MAX: Felt = Felt::new(12067376778971882765);
/// Error Message: "least significant byte of the account ID suffix must be zero"
pub const ERR_ACCOUNT_ID_LEAST_SIGNIFICANT_BYTE_MUST_BE_ZERO: Felt = Felt::new(8695635439449049477);
/// Error Message: "the account ID must have storage mode public if the network flag is set"
pub const ERR_ACCOUNT_ID_NON_PUBLIC_NETWORK_ACCOUNT: Felt = Felt::new(14413023379180667173);
/// Error Message: "unknown account storage mode in account ID"
pub const ERR_ACCOUNT_ID_UNKNOWN_STORAGE_MODE: Felt = Felt::new(16921162975536314032);
/// Error Message: "unknown version in account ID"
pub const ERR_ACCOUNT_ID_UNKNOWN_VERSION: Felt = Felt::new(16947744092841196033);
/// Error Message: "storage size can only be zero if storage offset is also zero"
pub const ERR_ACCOUNT_INVALID_STORAGE_OFFSET_FOR_SIZE: Felt = Felt::new(17760309317949297672);
/// Error Message: "the current account is not native"
pub const ERR_ACCOUNT_IS_NOT_NATIVE: Felt = Felt::new(12380605193143981600);
/// Error Message: "account nonce did not increase after a state changing transaction"
pub const ERR_ACCOUNT_NONCE_DID_NOT_INCREASE_AFTER_STATE_CHANGE: Felt = Felt::new(8911603695342923722);
/// Error Message: "account nonce cannot be increased by a greater than u32 value"
pub const ERR_ACCOUNT_NONCE_INCREASE_MUST_BE_U32: Felt = Felt::new(8200124154856019775);
/// Error Message: "provided procedure index is out of bounds"
pub const ERR_ACCOUNT_PROC_INDEX_OUT_OF_BOUNDS: Felt = Felt::new(16072741123244248050);
/// Error Message: "account procedure is not part of the account code"
pub const ERR_ACCOUNT_PROC_NOT_PART_OF_ACCOUNT_CODE: Felt = Felt::new(6476144169596124197);
/// Error Message: "failed to read an account map item from a non-map storage slot"
pub const ERR_ACCOUNT_READING_MAP_VALUE_FROM_NON_MAP_SLOT: Felt = Felt::new(4289310479319251801);
/// Error Message: "ID of the new account does not match the ID computed from the seed and anchor block commitment"
pub const ERR_ACCOUNT_SEED_ANCHOR_BLOCK_COMMITMENT_DIGEST_MISMATCH: Felt = Felt::new(14548610944814949725);
/// Error Message: "failed to write an account map item to a non-map storage slot"
pub const ERR_ACCOUNT_SETTING_MAP_ITEM_ON_NON_MAP_SLOT: Felt = Felt::new(2313272659147269172);
/// Error Message: "failed to write an account value item to a non-value storage slot"
pub const ERR_ACCOUNT_SETTING_VALUE_ITEM_ON_NON_VALUE_SLOT: Felt = Felt::new(14627155093732175517);
/// Error Message: "depth of the nested FPI calls exceeded 64"
pub const ERR_ACCOUNT_STACK_OVERFLOW: Felt = Felt::new(13035268079659662104);
/// Error Message: "failed to end foreign context because the current account is the native account"
pub const ERR_ACCOUNT_STACK_UNDERFLOW: Felt = Felt::new(6413241679708885442);
/// Error Message: "computed account storage commitment does not match recorded account storage commitment"
pub const ERR_ACCOUNT_STORAGE_COMMITMENT_MISMATCH: Felt = Felt::new(1516178267550996923);
/// Error Message: "provided storage slot index is out of bounds"
pub const ERR_ACCOUNT_STORAGE_SLOT_INDEX_OUT_OF_BOUNDS: Felt = Felt::new(8860266266166156955);
/// Error Message: "number of account procedures exceeds the maximum limit of 256"
pub const ERR_ACCOUNT_TOO_MANY_PROCEDURES: Felt = Felt::new(15732431870554482273);
/// Error Message: "number of account storage slots exceeds the maximum limit of 255"
pub const ERR_ACCOUNT_TOO_MANY_STORAGE_SLOTS: Felt = Felt::new(6079660147549694679);

/// Error Message: "total number of assets in the account and all involved notes must stay the same"
pub const ERR_EPILOGUE_TOTAL_NUMBER_OF_ASSETS_MUST_STAY_THE_SAME: Felt = Felt::new(4544980346559459778);

/// Error Message: "asset amount to burn can not exceed the existing total supply"
pub const ERR_FAUCET_BURN_CANNOT_EXCEED_EXISTING_TOTAL_SUPPLY: Felt = Felt::new(17307040050966762700);
/// Error Message: "the burn_non_fungible_asset procedure can only be called on a non-fungible faucet"
pub const ERR_FAUCET_BURN_NON_FUNGIBLE_ASSET_CAN_ONLY_BE_CALLED_ON_NON_FUNGIBLE_FAUCET: Felt = Felt::new(16085962339383934799);
/// Error Message: "storage offset is invalid for a faucet account (0 is prohibited as it is the reserved data slot for faucets)"
pub const ERR_FAUCET_INVALID_STORAGE_OFFSET: Felt = Felt::new(14237186214050136306);
/// Error Message: "the faucet_is_non_fungible_asset_issued procedure can only be called on a non-fungible faucet"
pub const ERR_FAUCET_IS_NF_ASSET_ISSUED_PROC_CAN_ONLY_BE_CALLED_ON_NON_FUNGIBLE_FAUCET: Felt = Felt::new(13784876313157018314);
/// Error Message: "asset mint operation would cause the new total supply to exceed the maximum allowed asset amount"
pub const ERR_FAUCET_NEW_TOTAL_SUPPLY_WOULD_EXCEED_MAX_ASSET_AMOUNT: Felt = Felt::new(373134016986787084);
/// Error Message: "failed to mint new non-fungible asset because it was already issued"
pub const ERR_FAUCET_NON_FUNGIBLE_ASSET_ALREADY_ISSUED: Felt = Felt::new(3227312782876840690);
/// Error Message: "failed to burn non-existent non-fungible asset in the vault"
pub const ERR_FAUCET_NON_FUNGIBLE_ASSET_TO_BURN_NOT_FOUND: Felt = Felt::new(10221571715531244698);
/// Error Message: "for faucets the FAUCET_STORAGE_DATA_SLOT storage slot is reserved and can not be used with set_account_item"
pub const ERR_FAUCET_STORAGE_DATA_SLOT_IS_RESERVED: Felt = Felt::new(7590470490137741257);
/// Error Message: "the faucet_get_total_fungible_asset_issuance procedure can only be called on a fungible faucet"
pub const ERR_FAUCET_TOTAL_ISSUANCE_PROC_CAN_ONLY_BE_CALLED_ON_FUNGIBLE_FAUCET: Felt = Felt::new(11985762211122418244);

/// Error Message: "creation of a foreign context against the native account is forbidden"
pub const ERR_FOREIGN_ACCOUNT_CONTEXT_AGAINST_NATIVE_ACCOUNT: Felt = Felt::new(17754691248227077573);
/// Error Message: "ID of the provided foreign account equals zero"
pub const ERR_FOREIGN_ACCOUNT_ID_IS_ZERO: Felt = Felt::new(11762143800340748539);
/// Error Message: "commitment of the foreign account in the advice provider does not match the commitment in the account tree"
pub const ERR_FOREIGN_ACCOUNT_INVALID_COMMITMENT: Felt = Felt::new(16249416635580848901);
/// Error Message: "maximum allowed number of foreign account to be loaded (64) was exceeded"
pub const ERR_FOREIGN_ACCOUNT_MAX_NUMBER_EXCEEDED: Felt = Felt::new(3841907140529456209);

/// Error Message: "fungible asset build operation called with amount that exceeds the maximum allowed asset amount"
pub const ERR_FUNGIBLE_ASSET_AMOUNT_EXCEEDS_MAX_ALLOWED_AMOUNT: Felt = Felt::new(13555792425744648570);
/// Error Message: "distribute would cause the maximum supply to be exceeded"
pub const ERR_FUNGIBLE_ASSET_DISTRIBUTE_WOULD_CAUSE_MAX_SUPPLY_TO_BE_EXCEEDED: Felt = Felt::new(16618085005280975379);
/// Error Message: "the origin of the fungible asset is not this faucet"
pub const ERR_FUNGIBLE_ASSET_FAUCET_IS_NOT_ORIGIN: Felt = Felt::new(715708557446606515);
/// Error Message: "malformed fungible asset: `ASSET[1]` must be 0"
pub const ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_ONE_MUST_BE_ZERO: Felt = Felt::new(8233656967914187408);
/// Error Message: "malformed fungible asset: `ASSET[2]` and `ASSET[3]` must be a valid fungible faucet id"
pub const ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_TWO_AND_THREE_MUST_BE_FUNGIBLE_FAUCET_ID: Felt = Felt::new(8870171419883969720);
/// Error Message: "malformed fungible asset: `ASSET[0]` exceeds the maximum allowed amount"
pub const ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_ZERO_MUST_BE_WITHIN_LIMITS: Felt = Felt::new(11831421773237028884);
/// Error Message: "failed to build the fungible asset because the provided faucet id is not from a fungible faucet"
pub const ERR_FUNGIBLE_ASSET_PROVIDED_FAUCET_ID_IS_INVALID: Felt = Felt::new(3822163825613017485);

/// Error Message: "provided kernel procedure offset is out of bounds"
pub const ERR_KERNEL_PROCEDURE_OFFSET_OUT_OF_BOUNDS: Felt = Felt::new(13630692338186714136);

/// Error Message: "non-fungible asset that already exists in the note cannot be added again"
pub const ERR_NON_FUNGIBLE_ASSET_ALREADY_EXISTS: Felt = Felt::new(4229144125765778103);
/// Error Message: "the origin of the non-fungible asset is not this faucet"
pub const ERR_NON_FUNGIBLE_ASSET_FAUCET_IS_NOT_ORIGIN: Felt = Felt::new(8717598548663488087);
/// Error Message: "malformed non-fungible asset: `ASSET[3]` is not a valid non-fungible faucet id"
pub const ERR_NON_FUNGIBLE_ASSET_FORMAT_ELEMENT_THREE_MUST_BE_FUNGIBLE_FAUCET_ID: Felt = Felt::new(2992029914967517211);
/// Error Message: "malformed non-fungible asset: the most significant bit must be 0"
pub const ERR_NON_FUNGIBLE_ASSET_FORMAT_MOST_SIGNIFICANT_BIT_MUST_BE_ZERO: Felt = Felt::new(15682137823966538788);
/// Error Message: "failed to build the non-fungible asset because the provided faucet id is not from a non-fungible faucet"
pub const ERR_NON_FUNGIBLE_ASSET_PROVIDED_FAUCET_ID_IS_INVALID: Felt = Felt::new(3821760428225422713);

/// Error Message: "attempted to access note assets from incorrect context"
pub const ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_ASSETS_FROM_INCORRECT_CONTEXT: Felt = Felt::new(6726162565920983545);
/// Error Message: "attempted to access note inputs from incorrect context"
pub const ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_INPUTS_FROM_INCORRECT_CONTEXT: Felt = Felt::new(4326259542212989128);
/// Error Message: "attempted to access note sender from incorrect context"
pub const ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_SENDER_FROM_INCORRECT_CONTEXT: Felt = Felt::new(9990154155409514855);
/// Error Message: "note data does not match the commitment"
pub const ERR_NOTE_DATA_DOES_NOT_MATCH_COMMITMENT: Felt = Felt::new(5455870883377115245);
/// Error Message: "adding a fungible asset to a note cannot exceed the max_amount of 9223372036854775807"
pub const ERR_NOTE_FUNGIBLE_MAX_AMOUNT_EXCEEDED: Felt = Felt::new(2072701594685593798);
/// Error Message: "failed to find note at the given index; index must be within [0, num_of_notes]"
pub const ERR_NOTE_INVALID_INDEX: Felt = Felt::new(7837486887926470050);
/// Error Message: "invalid note type for the given note tag prefix"
pub const ERR_NOTE_INVALID_NOTE_TYPE_FOR_NOTE_TAG_PREFIX: Felt = Felt::new(5141492498381595070);
/// Error Message: "invalid note type"
pub const ERR_NOTE_INVALID_TYPE: Felt = Felt::new(8772761772176288138);
/// Error Message: "network execution mode with a specific target can only target network accounts"
pub const ERR_NOTE_NETWORK_EXECUTION_DOES_NOT_TARGET_NETWORK_ACCOUNT: Felt = Felt::new(6997168402480579263);
/// Error Message: "number of assets in a note exceed 255"
pub const ERR_NOTE_NUM_OF_ASSETS_EXCEED_LIMIT: Felt = Felt::new(375281178214607750);
/// Error Message: "the note's tag must fit into a u32 so the 32 most significant bits must be zero"
pub const ERR_NOTE_TAG_MUST_BE_U32: Felt = Felt::new(17298975714848359099);

/// Error Message: "existing accounts must have a non-zero nonce"
pub const ERR_PROLOGUE_EXISTING_ACCOUNT_MUST_HAVE_NON_ZERO_NONCE: Felt = Felt::new(8044860900725327082);
/// Error Message: "the provided global inputs do not match the block commitment"
pub const ERR_PROLOGUE_GLOBAL_INPUTS_PROVIDED_DO_NOT_MATCH_BLOCK_COMMITMENT: Felt = Felt::new(12370164735209473947);
/// Error Message: "the provided global inputs do not match the block number commitment"
pub const ERR_PROLOGUE_GLOBAL_INPUTS_PROVIDED_DO_NOT_MATCH_BLOCK_NUMBER_COMMITMENT: Felt = Felt::new(10498818392451379177);
/// Error Message: "note commitment computed from the input note data does not match given note commitment"
pub const ERR_PROLOGUE_INPUT_NOTES_COMMITMENT_MISMATCH: Felt = Felt::new(8839679237303943804);
/// Error Message: "account IDs provided via global inputs and advice provider do not match"
pub const ERR_PROLOGUE_MISMATCH_OF_ACCOUNT_IDS_FROM_GLOBAL_INPUTS_AND_ADVICE_PROVIDER: Felt = Felt::new(9643665291447368546);
/// Error Message: "reference block MMR and note's authentication MMR must match"
pub const ERR_PROLOGUE_MISMATCH_OF_REFERENCE_BLOCK_MMR_AND_NOTE_AUTHENTICATION_MMR: Felt = Felt::new(469098775797099375);
/// Error Message: "new account must have a zero nonce"
pub const ERR_PROLOGUE_NEW_ACCOUNT_NONCE_MUST_BE_ZERO: Felt = Felt::new(11915012847134497968);
/// Error Message: "new account must have an empty vault"
pub const ERR_PROLOGUE_NEW_ACCOUNT_VAULT_MUST_BE_EMPTY: Felt = Felt::new(16216989818707091362);
/// Error Message: "reserved slot for new fungible faucet has an invalid type"
pub const ERR_PROLOGUE_NEW_FUNGIBLE_FAUCET_RESERVED_SLOT_INVALID_TYPE: Felt = Felt::new(15706771015772368046);
/// Error Message: "reserved slot for new fungible faucet is not empty"
pub const ERR_PROLOGUE_NEW_FUNGIBLE_FAUCET_RESERVED_SLOT_MUST_BE_EMPTY: Felt = Felt::new(8612411673792808081);
/// Error Message: "reserved slot for new non-fungible faucet has an invalid type"
pub const ERR_PROLOGUE_NEW_NON_FUNGIBLE_FAUCET_RESERVED_SLOT_INVALID_TYPE: Felt = Felt::new(2621715876027980584);
/// Error Message: "reserved slot for non-fungible faucet is not a valid empty SMT"
pub const ERR_PROLOGUE_NEW_NON_FUNGIBLE_FAUCET_RESERVED_SLOT_MUST_BE_VALID_EMPY_SMT: Felt = Felt::new(11713241530053518324);
/// Error Message: "number of input notes exceeds the kernel's maximum limit of 1024"
pub const ERR_PROLOGUE_NUMBER_OF_INPUT_NOTES_EXCEEDS_LIMIT: Felt = Felt::new(9701308452778994493);
/// Error Message: "number of note assets exceeds the maximum limit of 256"
pub const ERR_PROLOGUE_NUMBER_OF_NOTE_ASSETS_EXCEEDS_LIMIT: Felt = Felt::new(10510078233504570177);
/// Error Message: "number of note inputs exceeded the maximum limit of 128"
pub const ERR_PROLOGUE_NUMBER_OF_NOTE_INPUTS_EXCEEDED_LIMIT: Felt = Felt::new(4568418336312615490);
/// Error Message: "account data provided does not match the commitment recorded on-chain"
pub const ERR_PROLOGUE_PROVIDED_ACCOUNT_DATA_DOES_NOT_MATCH_ON_CHAIN_COMMITMENT: Felt = Felt::new(778022184689408609);
/// Error Message: "provided info about assets of an input does not match its commitment"
pub const ERR_PROLOGUE_PROVIDED_INPUT_ASSETS_INFO_DOES_NOT_MATCH_ITS_COMMITMENT: Felt = Felt::new(14539479504970340985);

/// Error Message: "transaction expiration block delta must be within 0x1 and 0xFFFF"
pub const ERR_TX_INVALID_EXPIRATION_DELTA: Felt = Felt::new(4864812368837205897);
/// Error Message: "number of output notes in the transaction exceeds the maximum limit of 1024"
pub const ERR_TX_NUMBER_OF_OUTPUT_NOTES_EXCEEDS_LIMIT: Felt = Felt::new(2073435543692511077);
/// Error Message: "the transaction script is missing"
pub const ERR_TX_TRANSACTION_SCRIPT_IS_MISSING: Felt = Felt::new(3997908114068525674);

/// Error Message: "failed to add fungible asset to the asset vault due to the initial value being invalid"
pub const ERR_VAULT_ADD_FUNGIBLE_ASSET_FAILED_INITIAL_VALUE_INVALID: Felt = Felt::new(14736937254546639654);
/// Error Message: "failed to remove the fungible asset from the vault since the amount of the asset in the vault is less than the amount to remove"
pub const ERR_VAULT_FUNGIBLE_ASSET_AMOUNT_LESS_THAN_AMOUNT_TO_WITHDRAW: Felt = Felt::new(644413868907058392);
/// Error Message: "adding the fungible asset to the vault would exceed the max amount of 9223372036854775807"
pub const ERR_VAULT_FUNGIBLE_MAX_AMOUNT_EXCEEDED: Felt = Felt::new(11313248770004725535);
/// Error Message: "the get_balance procedure can only be called on a fungible faucet"
pub const ERR_VAULT_GET_BALANCE_PROC_CAN_ONLY_BE_CALLED_ON_FUNGIBLE_FAUCET: Felt = Felt::new(13157157948426703814);
/// Error Message: "the has_non_fungible_asset procedure can only be called on a non-fungible faucet"
pub const ERR_VAULT_HAS_NON_FUNGIBLE_ASSET_PROC_CAN_BE_CALLED_ONLY_WITH_NON_FUNGIBLE_ASSET: Felt = Felt::new(10411337989222798704);
/// Error Message: "the non-fungible asset already exists in the asset vault"
pub const ERR_VAULT_NON_FUNGIBLE_ASSET_ALREADY_EXISTS: Felt = Felt::new(15449957249351814636);
/// Error Message: "failed to remove non-existent non-fungible asset from the vault"
pub const ERR_VAULT_NON_FUNGIBLE_ASSET_TO_REMOVE_NOT_FOUND: Felt = Felt::new(3787428053458238247);
/// Error Message: "failed to remove fungible asset from the asset vault due to the initial value being invalid"
pub const ERR_VAULT_REMOVE_FUNGIBLE_ASSET_FAILED_INITIAL_VALUE_INVALID: Felt = Felt::new(12638331244142339842);

pub const TX_KERNEL_ERRORS: [(Felt, &str); 90] = [
    (ERR_ACCOUNT_ANCHOR_BLOCK_COMMITMENT_MUST_NOT_BE_EMPTY, "anchor block commitment must not be empty"),
    (ERR_ACCOUNT_CODE_COMMITMENT_MISMATCH, "computed account code commitment does not match recorded account code commitment"),
    (ERR_ACCOUNT_CODE_IS_NOT_UPDATABLE, "account code must be updatable for it to be possible to set new code"),
    (ERR_ACCOUNT_ID_EPOCH_MUST_BE_LESS_THAN_U16_MAX, "epoch must be less than u16::MAX (0xffff)"),
    (ERR_ACCOUNT_ID_LEAST_SIGNIFICANT_BYTE_MUST_BE_ZERO, "least significant byte of the account ID suffix must be zero"),
    (ERR_ACCOUNT_ID_NON_PUBLIC_NETWORK_ACCOUNT, "the account ID must have storage mode public if the network flag is set"),
    (ERR_ACCOUNT_ID_UNKNOWN_STORAGE_MODE, "unknown account storage mode in account ID"),
    (ERR_ACCOUNT_ID_UNKNOWN_VERSION, "unknown version in account ID"),
    (ERR_ACCOUNT_INVALID_STORAGE_OFFSET_FOR_SIZE, "storage size can only be zero if storage offset is also zero"),
    (ERR_ACCOUNT_IS_NOT_NATIVE, "the current account is not native"),
    (ERR_ACCOUNT_NONCE_DID_NOT_INCREASE_AFTER_STATE_CHANGE, "account nonce did not increase after a state changing transaction"),
    (ERR_ACCOUNT_NONCE_INCREASE_MUST_BE_U32, "account nonce cannot be increased by a greater than u32 value"),
    (ERR_ACCOUNT_PROC_INDEX_OUT_OF_BOUNDS, "provided procedure index is out of bounds"),
    (ERR_ACCOUNT_PROC_NOT_PART_OF_ACCOUNT_CODE, "account procedure is not part of the account code"),
    (ERR_ACCOUNT_READING_MAP_VALUE_FROM_NON_MAP_SLOT, "failed to read an account map item from a non-map storage slot"),
    (ERR_ACCOUNT_SEED_ANCHOR_BLOCK_COMMITMENT_DIGEST_MISMATCH, "ID of the new account does not match the ID computed from the seed and anchor block commitment"),
    (ERR_ACCOUNT_SETTING_MAP_ITEM_ON_NON_MAP_SLOT, "failed to write an account map item to a non-map storage slot"),
    (ERR_ACCOUNT_SETTING_VALUE_ITEM_ON_NON_VALUE_SLOT, "failed to write an account value item to a non-value storage slot"),
    (ERR_ACCOUNT_STACK_OVERFLOW, "depth of the nested FPI calls exceeded 64"),
    (ERR_ACCOUNT_STACK_UNDERFLOW, "failed to end foreign context because the current account is the native account"),
    (ERR_ACCOUNT_STORAGE_COMMITMENT_MISMATCH, "computed account storage commitment does not match recorded account storage commitment"),
    (ERR_ACCOUNT_STORAGE_SLOT_INDEX_OUT_OF_BOUNDS, "provided storage slot index is out of bounds"),
    (ERR_ACCOUNT_TOO_MANY_PROCEDURES, "number of account procedures exceeds the maximum limit of 256"),
    (ERR_ACCOUNT_TOO_MANY_STORAGE_SLOTS, "number of account storage slots exceeds the maximum limit of 255"),

    (ERR_EPILOGUE_TOTAL_NUMBER_OF_ASSETS_MUST_STAY_THE_SAME, "total number of assets in the account and all involved notes must stay the same"),

    (ERR_FAUCET_BURN_CANNOT_EXCEED_EXISTING_TOTAL_SUPPLY, "asset amount to burn can not exceed the existing total supply"),
    (ERR_FAUCET_BURN_NON_FUNGIBLE_ASSET_CAN_ONLY_BE_CALLED_ON_NON_FUNGIBLE_FAUCET, "the burn_non_fungible_asset procedure can only be called on a non-fungible faucet"),
    (ERR_FAUCET_INVALID_STORAGE_OFFSET, "storage offset is invalid for a faucet account (0 is prohibited as it is the reserved data slot for faucets)"),
    (ERR_FAUCET_IS_NF_ASSET_ISSUED_PROC_CAN_ONLY_BE_CALLED_ON_NON_FUNGIBLE_FAUCET, "the faucet_is_non_fungible_asset_issued procedure can only be called on a non-fungible faucet"),
    (ERR_FAUCET_NEW_TOTAL_SUPPLY_WOULD_EXCEED_MAX_ASSET_AMOUNT, "asset mint operation would cause the new total supply to exceed the maximum allowed asset amount"),
    (ERR_FAUCET_NON_FUNGIBLE_ASSET_ALREADY_ISSUED, "failed to mint new non-fungible asset because it was already issued"),
    (ERR_FAUCET_NON_FUNGIBLE_ASSET_TO_BURN_NOT_FOUND, "failed to burn non-existent non-fungible asset in the vault"),
    (ERR_FAUCET_STORAGE_DATA_SLOT_IS_RESERVED, "for faucets the FAUCET_STORAGE_DATA_SLOT storage slot is reserved and can not be used with set_account_item"),
    (ERR_FAUCET_TOTAL_ISSUANCE_PROC_CAN_ONLY_BE_CALLED_ON_FUNGIBLE_FAUCET, "the faucet_get_total_fungible_asset_issuance procedure can only be called on a fungible faucet"),

    (ERR_FOREIGN_ACCOUNT_CONTEXT_AGAINST_NATIVE_ACCOUNT, "creation of a foreign context against the native account is forbidden"),
    (ERR_FOREIGN_ACCOUNT_ID_IS_ZERO, "ID of the provided foreign account equals zero"),
    (ERR_FOREIGN_ACCOUNT_INVALID_COMMITMENT, "commitment of the foreign account in the advice provider does not match the commitment in the account tree"),
    (ERR_FOREIGN_ACCOUNT_MAX_NUMBER_EXCEEDED, "maximum allowed number of foreign account to be loaded (64) was exceeded"),

    (ERR_FUNGIBLE_ASSET_AMOUNT_EXCEEDS_MAX_ALLOWED_AMOUNT, "fungible asset build operation called with amount that exceeds the maximum allowed asset amount"),
    (ERR_FUNGIBLE_ASSET_DISTRIBUTE_WOULD_CAUSE_MAX_SUPPLY_TO_BE_EXCEEDED, "distribute would cause the maximum supply to be exceeded"),
    (ERR_FUNGIBLE_ASSET_FAUCET_IS_NOT_ORIGIN, "the origin of the fungible asset is not this faucet"),
    (ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_ONE_MUST_BE_ZERO, "malformed fungible asset: `ASSET[1]` must be 0"),
    (ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_TWO_AND_THREE_MUST_BE_FUNGIBLE_FAUCET_ID, "malformed fungible asset: `ASSET[2]` and `ASSET[3]` must be a valid fungible faucet id"),
    (ERR_FUNGIBLE_ASSET_FORMAT_ELEMENT_ZERO_MUST_BE_WITHIN_LIMITS, "malformed fungible asset: `ASSET[0]` exceeds the maximum allowed amount"),
    (ERR_FUNGIBLE_ASSET_PROVIDED_FAUCET_ID_IS_INVALID, "failed to build the fungible asset because the provided faucet id is not from a fungible faucet"),

    (ERR_KERNEL_PROCEDURE_OFFSET_OUT_OF_BOUNDS, "provided kernel procedure offset is out of bounds"),

    (ERR_NON_FUNGIBLE_ASSET_ALREADY_EXISTS, "non-fungible asset that already exists in the note cannot be added again"),
    (ERR_NON_FUNGIBLE_ASSET_FAUCET_IS_NOT_ORIGIN, "the origin of the non-fungible asset is not this faucet"),
    (ERR_NON_FUNGIBLE_ASSET_FORMAT_ELEMENT_THREE_MUST_BE_FUNGIBLE_FAUCET_ID, "malformed non-fungible asset: `ASSET[3]` is not a valid non-fungible faucet id"),
    (ERR_NON_FUNGIBLE_ASSET_FORMAT_MOST_SIGNIFICANT_BIT_MUST_BE_ZERO, "malformed non-fungible asset: the most significant bit must be 0"),
    (ERR_NON_FUNGIBLE_ASSET_PROVIDED_FAUCET_ID_IS_INVALID, "failed to build the non-fungible asset because the provided faucet id is not from a non-fungible faucet"),

    (ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_ASSETS_FROM_INCORRECT_CONTEXT, "attempted to access note assets from incorrect context"),
    (ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_INPUTS_FROM_INCORRECT_CONTEXT, "attempted to access note inputs from incorrect context"),
    (ERR_NOTE_ATTEMPT_TO_ACCESS_NOTE_SENDER_FROM_INCORRECT_CONTEXT, "attempted to access note sender from incorrect context"),
    (ERR_NOTE_DATA_DOES_NOT_MATCH_COMMITMENT, "note data does not match the commitment"),
    (ERR_NOTE_FUNGIBLE_MAX_AMOUNT_EXCEEDED, "adding a fungible asset to a note cannot exceed the max_amount of 9223372036854775807"),
    (ERR_NOTE_INVALID_INDEX, "failed to find note at the given index; index must be within [0, num_of_notes]"),
    (ERR_NOTE_INVALID_NOTE_TYPE_FOR_NOTE_TAG_PREFIX, "invalid note type for the given note tag prefix"),
    (ERR_NOTE_INVALID_TYPE, "invalid note type"),
    (ERR_NOTE_NETWORK_EXECUTION_DOES_NOT_TARGET_NETWORK_ACCOUNT, "network execution mode with a specific target can only target network accounts"),
    (ERR_NOTE_NUM_OF_ASSETS_EXCEED_LIMIT, "number of assets in a note exceed 255"),
    (ERR_NOTE_TAG_MUST_BE_U32, "the note's tag must fit into a u32 so the 32 most significant bits must be zero"),

    (ERR_PROLOGUE_EXISTING_ACCOUNT_MUST_HAVE_NON_ZERO_NONCE, "existing accounts must have a non-zero nonce"),
    (ERR_PROLOGUE_GLOBAL_INPUTS_PROVIDED_DO_NOT_MATCH_BLOCK_COMMITMENT, "the provided global inputs do not match the block commitment"),
    (ERR_PROLOGUE_GLOBAL_INPUTS_PROVIDED_DO_NOT_MATCH_BLOCK_NUMBER_COMMITMENT, "the provided global inputs do not match the block number commitment"),
    (ERR_PROLOGUE_INPUT_NOTES_COMMITMENT_MISMATCH, "note commitment computed from the input note data does not match given note commitment"),
    (ERR_PROLOGUE_MISMATCH_OF_ACCOUNT_IDS_FROM_GLOBAL_INPUTS_AND_ADVICE_PROVIDER, "account IDs provided via global inputs and advice provider do not match"),
    (ERR_PROLOGUE_MISMATCH_OF_REFERENCE_BLOCK_MMR_AND_NOTE_AUTHENTICATION_MMR, "reference block MMR and note's authentication MMR must match"),
    (ERR_PROLOGUE_NEW_ACCOUNT_NONCE_MUST_BE_ZERO, "new account must have a zero nonce"),
    (ERR_PROLOGUE_NEW_ACCOUNT_VAULT_MUST_BE_EMPTY, "new account must have an empty vault"),
    (ERR_PROLOGUE_NEW_FUNGIBLE_FAUCET_RESERVED_SLOT_INVALID_TYPE, "reserved slot for new fungible faucet has an invalid type"),
    (ERR_PROLOGUE_NEW_FUNGIBLE_FAUCET_RESERVED_SLOT_MUST_BE_EMPTY, "reserved slot for new fungible faucet is not empty"),
    (ERR_PROLOGUE_NEW_NON_FUNGIBLE_FAUCET_RESERVED_SLOT_INVALID_TYPE, "reserved slot for new non-fungible faucet has an invalid type"),
    (ERR_PROLOGUE_NEW_NON_FUNGIBLE_FAUCET_RESERVED_SLOT_MUST_BE_VALID_EMPY_SMT, "reserved slot for non-fungible faucet is not a valid empty SMT"),
    (ERR_PROLOGUE_NUMBER_OF_INPUT_NOTES_EXCEEDS_LIMIT, "number of input notes exceeds the kernel's maximum limit of 1024"),
    (ERR_PROLOGUE_NUMBER_OF_NOTE_ASSETS_EXCEEDS_LIMIT, "number of note assets exceeds the maximum limit of 256"),
    (ERR_PROLOGUE_NUMBER_OF_NOTE_INPUTS_EXCEEDED_LIMIT, "number of note inputs exceeded the maximum limit of 128"),
    (ERR_PROLOGUE_PROVIDED_ACCOUNT_DATA_DOES_NOT_MATCH_ON_CHAIN_COMMITMENT, "account data provided does not match the commitment recorded on-chain"),
    (ERR_PROLOGUE_PROVIDED_INPUT_ASSETS_INFO_DOES_NOT_MATCH_ITS_COMMITMENT, "provided info about assets of an input does not match its commitment"),

    (ERR_TX_INVALID_EXPIRATION_DELTA, "transaction expiration block delta must be within 0x1 and 0xFFFF"),
    (ERR_TX_NUMBER_OF_OUTPUT_NOTES_EXCEEDS_LIMIT, "number of output notes in the transaction exceeds the maximum limit of 1024"),
    (ERR_TX_TRANSACTION_SCRIPT_IS_MISSING, "the transaction script is missing"),

    (ERR_VAULT_ADD_FUNGIBLE_ASSET_FAILED_INITIAL_VALUE_INVALID, "failed to add fungible asset to the asset vault due to the initial value being invalid"),
    (ERR_VAULT_FUNGIBLE_ASSET_AMOUNT_LESS_THAN_AMOUNT_TO_WITHDRAW, "failed to remove the fungible asset from the vault since the amount of the asset in the vault is less than the amount to remove"),
    (ERR_VAULT_FUNGIBLE_MAX_AMOUNT_EXCEEDED, "adding the fungible asset to the vault would exceed the max amount of 9223372036854775807"),
    (ERR_VAULT_GET_BALANCE_PROC_CAN_ONLY_BE_CALLED_ON_FUNGIBLE_FAUCET, "the get_balance procedure can only be called on a fungible faucet"),
    (ERR_VAULT_HAS_NON_FUNGIBLE_ASSET_PROC_CAN_BE_CALLED_ONLY_WITH_NON_FUNGIBLE_ASSET, "the has_non_fungible_asset procedure can only be called on a non-fungible faucet"),
    (ERR_VAULT_NON_FUNGIBLE_ASSET_ALREADY_EXISTS, "the non-fungible asset already exists in the asset vault"),
    (ERR_VAULT_NON_FUNGIBLE_ASSET_TO_REMOVE_NOT_FOUND, "failed to remove non-existent non-fungible asset from the vault"),
    (ERR_VAULT_REMOVE_FUNGIBLE_ASSET_FAILED_INITIAL_VALUE_INVALID, "failed to remove fungible asset from the asset vault due to the initial value being invalid"),
];
