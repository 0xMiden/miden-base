use.miden::account
use.miden::tx

# CONSTANTS
# =================================================================================================

# Event to place the falcon signature of a provided message and public key on the advice stack.
const.FALCON_SIG_TO_STACK=131087

# The slot in this component's storage layout where the public key is stored.
const.PUBLIC_KEY_SLOT=0

# The slot where the number of auth trigger procedures is stored.
const.NUM_AUTH_TRIGGER_PROCS_SLOT=1

# The slot where the map of auth trigger procedure roots is stored.
const.AUTH_TRIGGER_PROCS_MAP_SLOT=2

#! Authenticate a transaction using the Falcon signature scheme only if specified auth trigger
#! procedures were called.
#!
#! This authentication procedure checks if any of the trigger procedures were called during the
#! transaction. If none were called, authentication is skipped. If at least one was called,
#! the standard RpoFalcon512 signature verification is performed.
#! Nonce is incremented in both cases.
#!
#! Inputs:  [pad(16)]
#! Outputs: [pad(16)]
export.auth__tx_rpo_falcon512_procedure_acl.1
    # Get the number of trigger procedures
    push.NUM_AUTH_TRIGGER_PROCS_SLOT exec.account::get_item
    # => [num_auth_trigger_procs, allow_unauthorized_output_notes, 0, 0, pad(16)]

    movup.2 movup.3 drop drop
    # => [num_auth_trigger_procs, allow_unauthorized_output_notes, pad(16)]

    swap loc_store.0
    # => [num_auth_trigger_procs, pad(16)]

    # Check if any trigger procedure was called
    # Counter `i` starts at `num_auth_trigger_procs` and flag `was_any_called` starts at 0
    push.0
    # => [was_any_called, i, pad(16)]

    # Loop through trigger procedures
    dup.1 neq.0
    while.true
        # => [was_any_called, i, pad(16)]

        # Get the procedure root from storage
        dup.1 sub.1 push.0.0.0 push.AUTH_TRIGGER_PROCS_MAP_SLOT
        # => [AUTH_TRIGGER_PROCS_MAP_SLOT, [0, 0, 0, i-1], was_any_called, i, pad(16)]

        exec.account::get_map_item
        # => [AUTH_TRIGGER_PROC_ROOT, was_any_called, i, pad(16)]

        exec.account::was_procedure_called
        # => [was_called, was_any_called, i, pad(16)]

        # Update was_any_called
        or
        # => [was_any_called', i, pad(16)]

        swap sub.1 swap
        # => [was_any_called', i-1, pad(16)]

        # Check if we should continue looping
        dup.1 neq.0
        # => [should_continue, was_any_called', i-1, pad(16)]
    end
    # => [was_any_called, i-1, pad(16)]

    exec.tx::get_output_notes_commitment
    # => [OUTPUT_NOTES_COMMITMENT, was_any_called, i-1, pad(16)]

    padw eqw push.0 eq movdn.8 dropw dropw
    # => [were_output_notes_created, was_any_called, i-1, pad(16)]

    loc_load.0
    # => [allow_unauthorized_output_notes, were_output_notes_created, was_any_called, i-1, pad(16)]

    not
    # => [!allow_unauthorized_output_notes, were_output_notes_created, was_any_called, i-1, pad(16)]

    # were_output_notes_created && !allow_unauthorized_output_notes
    and
    # => [require_auth, was_any_called, i-1, pad(16)]

    if.true
        exec.::miden::contracts::auth::basic::auth__tx_rpo_falcon512
    end
    # => [was_any_called, i-1, pad(16)]

    # If any trigger procedure was called, perform signature verification
    if.true
        exec.::miden::contracts::auth::basic::auth__tx_rpo_falcon512
    else
        push.1 exec.account::incr_nonce
    end

    drop
end
