use.miden::kernel_proc_offsets

#! Returns the information about assets in the input note with the specified index.
#!
#! This information can then be used to retrieve the actual assets from the advice map.
#!
#! Inputs:  [note_index]
#! Outputs: [ASSETS_COMMITMENT, num_assets]
#!
#! Where:
#! - note_index is the index of the input note whose assets info should be returned.
#! - num_assets is the number of assets in the specified note.
#! - ASSETS_COMMITMENT is a sequential hash of the assets in the specified note.
#!
#! Panics if:
#! - the note index is greater or equal to the total number of input notes.
#!
#! Invocation: exec
export.get_assets_info
    # start padding the stack
    push.0.0 movup.2
    # => [note_index, 0, 0]

    exec.kernel_proc_offsets::input_note_get_assets_info_offset
    # => [offset, note_index, 0, 0]

    # pad the stack
    padw swapw padw padw swapdw
    # => [offset, note_index, pad(14)]

    syscall.exec_kernel_proc
    # => [ASSETS_COMMITMENT, num_assets, pad(11)]

    # clean the stack
    swapdw dropw dropw 
    repeat.3
        movup.5 drop
    end
    # => [ASSETS_COMMITMENT, num_assets]
end

#! Returns the recipient commitment of the input note with the specified index.
#!
#! Inputs:  [note_index]
#! Outputs: [RECIPIENT_COMMITMENT]
#!
#! Where:
#! - note_index is the index of the input note whose recipient commitment should be returned.
#! - RECIPIENT_COMMITMENT is the commitment to the input note's script, inputs, the serial number.
#!
#! Invocation: exec
export.get_recipient
    # start padding the stack
    push.0.0 movup.2
    # => [note_index, 0, 0]

    exec.kernel_proc_offsets::input_note_get_recipient_offset
    # => [offset, note_index, 0, 0]

    # pad the stack
    padw swapw padw padw swapdw
    # => [offset, note_index, pad(14)]

    syscall.exec_kernel_proc
    # => [RECIPIENT_COMMITMENT, pad(12)]

    # clean the stack
    swapdw dropw dropw swapw dropw
    # => [RECIPIENT_COMMITMENT]
end