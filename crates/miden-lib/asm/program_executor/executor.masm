use.std::utils

use.kernel::memory
use.kernel::prologue

#! 
proc.main
    # Prologue
    # ---------------------------------------------------------------------------------------------

    exec.prologue::prepare_transaction
    # => []

    # Script Processing
    # ---------------------------------------------------------------------------------------------

    # get the memory address of the transaction script root and load it to the stack
    exec.memory::get_tx_script_root_ptr
    padw dup.4 mem_loadw
    # => [TX_SCRIPT_ROOT, tx_script_root_ptr]

    exec.utils::is_empty_word not movdn.4 dropw
    # => [has_tx_script, tx_script_root_ptr]

    if.true
        # execute the transaction script
        dyncall
        # => [OUTPUT_3, OUTPUT_2, OUTPUT_1, OUTPUT_0]
    else
        # drop the pointer to the empty transaction script root
        drop
        # => []
    end
end

begin
    exec.main
end
