# Cargo Makefile

# This env variable is need by cargo-make to enable correct functionality of commands
# in the context of a rust workspace: https://github.com/sagiegurari/cargo-make?tab=readme-ov-file#usage
[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true

# linting
[tasks.clippy]
description = "Runs Clippy"
command = "cargo"
args = ["clippy", "--workspace", "--all-targets", "--all-features", "--", "-D", "warnings"]

[tasks.fix]
description = "Runs Fix"
command = "cargo"
toolchain = "nightly"
args = ["fix", "--allow-staged", "--allow-dirty", "--all-targets", "--all-features"]

[tasks.format]
description = "Runs Rustfmt"
command = "cargo"
toolchain = "nightly"
args = ["fmt"]

[tasks.lint]
description = "Runs all linting tasks (Clippy, fixing, formatting)"
dependencies = [
  "fix",
  "format",
  "clippy"
]

# testing
[tasks.test]
disabled = true

[tasks.test-default]
description = "Run default tests excluding `prove`"
workspace = false
command = "cargo"
args = ["test", "--profile", "test-release", "--features", "concurrent,testing", "--", "--skip", "prove"]

[tasks.test-prove]
description = "Run `prove` tests (tests which use the Miden prover)"
workspace = false
command = "cargo"
args = ["test", "--release", "--features", "concurrent,testing", "prove"]

[tasks.test-all]
description = "Run all tests"
workspace = false
env = { "RUSTFLAGS" = "-C debug-assertions" }
run_task = { name = ["test-default", "test-prove"], parallel = true }

# building
[tasks.build-no-std]
description = "Build using no-std"
command = "cargo"
args = ["build", "--no-default-features", "--target", "wasm32-unknown-unknown", "--workspace", "--exclude", "miden-mock"]

# utilities
[tasks.watch]
description = "Watch for changes and rebuild"
workspace = false
command = "cargo"
args = ["watch", "-w", "miden-lib/asm", "-x", "build"]
